paths:
  /v2/student/teacher: 
    post:
      security:
        - Authorization: []    
      tags:
        - "v2/Student"
      summary: "Register a student via class teacher"
      description: "This API allows a class teacher to register a student."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstname
                - lastname
                - gender
                - parentName
                - phone
                - sectionId
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                gender:
                  type: string
                parentName:
                  type: string
                phone:
                  type: string
                sectionId:
                  type: string
      responses:
        200:
          description: "Student successfully registered"
        422:
          description: "Unprocessable Entity"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"

  /v2/student/admin: 
    get:
      security:
        - Authorization: []    
      tags:
        - "v2/Student"
      summary: "Search students by admin"
      description: "This API allows a admin to search students."
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search keyword to match firstname, lastname, parent email or phone.
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Number of students per page
        - in: query
          name: classId
          schema:
            type: string
          description: Filter by class ID
        - in: query
          name: section
          schema:
            type: string
          description: Filter by section ID
      responses:
        '200':
          description: Successfully fetched filtered students
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Request successful
                  data:
                    type: object
                    properties:
                      students:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            firstname:
                              type: string
                            lastname:
                              type: string
                            gender:
                              type: string
                            parentDetails:
                              type: object
                              properties:
                                _id:
                                  type: string
                                firstname:
                                  type: string
                                lastname:
                                  type: string
                                email:
                                  type: string
                                phone:
                                  type: string
                            sectionDetails:
                              type: object
                              nullable: true
                              properties:
                                name:
                                  type: string
                                studentCount:
                                  type: integer
                            classDetails:
                              type: object
                              nullable: true
                              properties:
                                name:
                                  type: string
                                sectionCount:
                                  type: integer
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 5
                      totalStudents:
                        type: integer
                        example: 100
                      pageSize:
                        type: integer
                        example: 20
        '400':
          description: Bad request due to invalid query params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/student/parent/photo-upload/{studentId}:
    put:
      security:
        - Authorization: []  
      tags:
        - v2/Student
      summary: Upload or delete a student's photo (by parent)
      description: Parent can upload or delete the photo of their child (student). Requires authentication.
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          description: ID of the student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  description: Base64-encoded image string (optional if method is DELETE)
                method:
                  type: string
                  enum: [POST, DELETE]
                  description: Specify whether to upload (`POST`) or delete (`DELETE`) the photo
              required:
                - method
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Bad Request (Validation Error)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        '401':
          description: Unauthorized (Authentication required)
        '500':
          description: Internal Server Error

  /v2/student/parent/{studentId}:
    put:
      security:
        - Authorization: []  
      tags:
        - v2/Student
      summary: Update student profile by parent
      description: Allows a parent to update the student's personal information such as name, address, photo, etc.
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the student to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                gender:
                  type: string
                bloodGroup:
                  type: string
                dob:
                  type: string
                  format: date
                photo:
                  type: string
                  description: Base64-encoded photo (optional if deleting)
                method:
                  type: string
                  enum: [DELETE]
                  description: If method is DELETE and photo is present, photo will be removed
                address:
                  type: string
                city:
                  type: string
                district:
                  type: string
                state:
                  type: string
                country:
                  type: string
                pincode:
                  type: string
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Student updated successfully
        '400':
          description: Bad Request (e.g. unauthorized parent)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        '404':
          description: Student or Parent not found
        '500':
          description: Internal Server Error
